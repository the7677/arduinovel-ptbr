#include <avr/pgmspace.h>
#include <U8g2lib.h>

char pixel_buff;

const char MAY_SPRITE[] PROGMEM = {
  ~0xFF, ~0x87, ~0xFF, ~0xFF, ~0xFF, ~0xFF, ~0x7B, ~0xFF, ~0xFF, ~0xFF, ~0xFF, ~0x85, 
  ~0xFE, ~0xFF, ~0xFF, ~0xFF, ~0x9E, ~0xFC, ~0xFF, ~0xFF, ~0xFF, ~0x3E, ~0xFB, ~0xFF, 
  ~0xFF, ~0xFF, ~0xDE, ~0x01, ~0xFF, ~0xFF, ~0xFF, ~0x6D, ~0xFE, ~0xF0, ~0xFF, ~0xFF, 
  ~0xB3, ~0xFF, ~0xCF, ~0xFF, ~0xFF, ~0xD7, ~0xFF, ~0x3F, ~0xFF, ~0xFF, ~0xEF, ~0xFF, 
  ~0xFF, ~0xFE, ~0xFF, ~0xF7, ~0xFF, ~0xFF, ~0xFD, ~0xFF, ~0xF7, ~0xFE, ~0xFF, ~0xFB, 
  ~0xFF, ~0x7B, ~0xFC, ~0xFF, ~0xF7, ~0xFF, ~0x7B, ~0xFC, ~0xFF, ~0xEF, ~0xFF, ~0xFB, 
  ~0xE2, ~0xFF, ~0xDF, ~0xFF, ~0xFD, ~0x63, ~0xFF, ~0xDF, ~0xFF, ~0xFD, ~0x27, ~0xFC, 
  ~0xAF, ~0xFF, ~0xFD, ~0x3F, ~0xE0, ~0xA7, ~0xFF, ~0xFD, ~0xFF, ~0xC0, ~0xA0, ~0xFF, 
  ~0xFD, ~0xFF, ~0xDF, ~0xBC, ~0xFF, ~0xFD, ~0xFF, ~0xBF, ~0xBF, ~0xFF, ~0xFD, ~0xFF, 
  ~0x5F, ~0xBF, ~0xFF, ~0xFE, ~0xFF, ~0x5F, ~0xBF, ~0xFF, ~0xFE, ~0xFF, ~0xEF, ~0xDF, 
  ~0xFF, ~0x3E, ~0xBF, ~0xAB, ~0xDF, ~0xFF, ~0x1E, ~0xAE, ~0xAB, ~0xDF, ~0xFF, ~0x1E, 
  ~0xCF, ~0xC0, ~0xEE, ~0xFF, ~0x3E, ~0x0F, ~0x10, ~0xF6, ~0xFF, ~0x3E, ~0x0F, ~0x10, 
  ~0xF6, ~0xFF, ~0x7E, ~0x0E, ~0x20, ~0xF6, ~0xFF, ~0xFE, ~0x0F, ~0x30, ~0xF6, ~0xFF, 
  ~0xFE, ~0x0F, ~0x00, ~0xF7, ~0xFF, ~0xFE, ~0x0F, ~0x01, ~0xF7, ~0xFF, ~0xFE, ~0x0D, 
  ~0x3E, ~0xFB, ~0xFF, ~0xFE, ~0x1D, ~0x9C, ~0xFB, ~0xFF, ~0xFE, ~0x3D, ~0xC0, ~0xFB, 
  ~0xFF, ~0xFE, ~0xEC, ~0xE0, ~0xFB, ~0xFF, ~0xFE, ~0xCE, ~0xBF, ~0xFB, ~0xFF, ~0x9E, 
  ~0x0F, ~0x9F, ~0xFB, ~0x7F, ~0x3F, ~0x87, ~0xAF, ~0xFD, ~0x7F, ~0x6F, ~0x8E, ~0xAF, 
  ~0xFD, ~0x7F, ~0xC3, ~0x8E, ~0xAF, ~0xFD, ~0x7F, ~0x81, ~0x97, ~0xAE, ~0xFD, ~0xBF, 
  ~0x00, ~0x27, ~0xAD, ~0xFD, ~0xBF, ~0x00, ~0x4F, ~0x9D, ~0xFD, ~0x5F, ~0x00, ~0xCF, 
  ~0x9A, ~0xFD, ~0x5F, ~0x80, ~0x9C, ~0x93, ~0xFD, ~0x5F, ~0x80, ~0x34, ~0x73, ~0xFA, 
  ~0x5F, ~0x00, ~0x67, ~0x66, ~0xFA, ~0x5F, ~0x80, ~0xC3, ~0xE4, ~0xFD, ~0x5F, ~0x80, 
  ~0x83, ~0xF9, ~0xFD, ~0x2F, ~0x00, ~0x01, ~0xD3, ~0xFD, ~0x2F, ~0x40, ~0x00, ~0x52, 
  ~0xFD, ~0x2F, ~0x80, ~0x01, ~0x64, ~0xFE, ~0x2F, ~0xC0, ~0x00, ~0x64, ~0xFF, ~0x2F, 
  ~0xC0, ~0x00, ~0xA4, ~0xFF, ~0x2F, ~0xC0, ~0x00, ~0xD6, ~0xFF, ~0x17, ~0x60, ~0x00, 
  ~0xD3, ~0xFF, ~0x17, ~0x60, ~0x80, ~0xD3, ~0xFF, ~0x17, ~0x60, ~0x00, ~0xD2, ~0xFF, 
  ~0x17, ~0x30, ~0x00, ~0xD2, ~0xFF, ~0x17, ~0x30, ~0x00, ~0xA4, ~0xFF, ~0x0B, ~0x70, 
  ~0x00, ~0xA4, ~0xFF, ~0x0B, ~0xF0, ~0x03, ~0x64, ~0xFF
};

const char SPLASH_SPRITE[] PROGMEM = {
  ~0xFF, ~0xFF, ~0xFF, ~0xFF, ~0xFF, ~0xFF, ~0xFF, ~0xFF, ~0xFF, ~0xFF, ~0xFF, ~0xFF, 
  ~0xFF, ~0xFF, ~0x27, ~0xFF, ~0xFF, ~0xFF, ~0xFF, ~0xFF, ~0xFF, ~0xFF, ~0x03, ~0xFE, 
  ~0xFF, ~0xFF, ~0x1F, ~0xF8, ~0xFF, ~0xFF, ~0xD9, ~0xFC, ~0xFF, ~0xC3, ~0x07, ~0xF0, 
  ~0xC0, ~0xC7, ~0xF9, ~0xFC, ~0xFF, ~0x81, ~0xE3, ~0x67, ~0x00, ~0x83, ~0xF1, ~0xFC, 
  ~0xFF, ~0x3C, ~0xF8, ~0x0F, ~0x3F, ~0x38, ~0x60, ~0xFE, ~0x7F, ~0x7E, ~0xFC, ~0x9F, 
  ~0xFF, ~0x7C, ~0x00, ~0xFC, ~0x7F, ~0xFE, ~0x7C, ~0x9C, ~0xFF, ~0x7D, ~0xCE, ~0xF9, 
  ~0x7F, ~0xFE, ~0x1D, ~0x9F, ~0xEF, ~0x7D, ~0xFF, ~0xF9, ~0x3F, ~0xFF, ~0xFD, ~0x9F, 
  ~0xEF, ~0x7F, ~0xFF, ~0xF3, ~0x3F, ~0xEF, ~0xFD, ~0x8F, ~0xCF, ~0x7F, ~0xFF, ~0xF3, 
  ~0x3F, ~0xCF, ~0xFD, ~0x1F, ~0x03, ~0x7F, ~0xDF, ~0xF3, ~0x9F, ~0xC7, ~0xFB, ~0x7F, 
  ~0xCF, ~0x7F, ~0xDF, ~0xF3, ~0x9F, ~0xFF, ~0xFB, ~0xFF, ~0xDF, ~0xFF, ~0xDF, ~0xE7, 
  ~0xCF, ~0xFF, ~0xFF, ~0xFF, ~0xDF, ~0xFF, ~0xDF, ~0xE7, ~0xCF, ~0xFF, ~0xFF, ~0xFD, 
  ~0xFF, ~0xF9, ~0x8F, ~0xE7, ~0xCF, ~0xFF, ~0xEF, ~0x73, ~0xFE, ~0xF9, ~0x8F, ~0xE7, 
  ~0xCF, ~0xC7, ~0xEF, ~0x03, ~0xFE, ~0xF0, ~0x07, ~0xF3, ~0xCF, ~0x87, ~0xEF, ~0x03, 
  ~0x1C, ~0x00, ~0x38, ~0xF8, ~0x8F, ~0x03, ~0xC7, ~0xE1, ~0xC0, ~0xF9, ~0x7C, ~0xFC, 
  ~0x07, ~0xE0, ~0x01, ~0xF0, ~0xE1, ~0xFF, ~0x7F, ~0xFE, ~0xE7, ~0xF1, ~0xE3, ~0xF1, 
  ~0xF3, ~0xFF, ~0x7F, ~0xFE, ~0xF3, ~0xF7, ~0xF3, ~0xF7, ~0xF3, ~0xFF, ~0x7F, ~0xFE, 
  ~0xF3, ~0xEF, ~0xFB, ~0xEF, ~0xF7, ~0x7D, ~0x7C, ~0xFE, ~0xF3, ~0xFF, ~0xFB, ~0xEF, 
  ~0xFF, ~0xFD, ~0xFD, ~0xFC, ~0xF3, ~0xFF, ~0x9F, ~0xFC, ~0xFF, ~0xFD, ~0xFB, ~0xFC, 
  ~0xF3, ~0xFF, ~0x1F, ~0xD8, ~0xFF, ~0xFC, ~0xFB, ~0xF0, ~0xE7, ~0xFF, ~0x1F, ~0xD8, 
  ~0xFF, ~0xFC, ~0xF9, ~0xE0, ~0xE7, ~0xFF, ~0x3F, ~0x9C, ~0xFF, ~0x7E, ~0xF8, ~0xCF, 
  ~0xE7, ~0xFB, ~0x3F, ~0x1C, ~0x7F, ~0xFE, ~0xFF, ~0x9F, ~0xE7, ~0xFB, ~0x7F, ~0x1E, 
  ~0x7F, ~0xFE, ~0xFF, ~0x9F, ~0xE7, ~0xF3, ~0xFB, ~0x0F, ~0x3E, ~0xFE, ~0xF7, ~0x9F, 
  ~0xE7, ~0xE3, ~0xF1, ~0xCF, ~0x1C, ~0xFE, ~0xF7, ~0xCF, ~0xCF, ~0x01, ~0xC0, ~0xE7, 
  ~0xC1, ~0xFC, ~0xE3, ~0xE1, ~0x1F, ~0x1C, ~0x0E, ~0xF0, ~0xE3, ~0x01, ~0x00, ~0xF0, 
  ~0x3F, ~0xFE, ~0x3F, ~0xF8, ~0xFF, ~0x03, ~0x1C, ~0xFE, ~0xFF, ~0xFF, ~0xFF, ~0xFF, 
  ~0xFF, ~0xFF, ~0xFF, ~0xFF, ~0xFF, ~0xFF, ~0xFF, ~0xFF, ~0xFF, ~0xFF, ~0xFF, ~0xFF, 
  ~0xFF, ~0xFF, ~0xFF, ~0xFF, ~0xFF, ~0xFF, ~0xFF, ~0xFF
};

void drawSprite(int x, int y, int width, int height, const char *sprite) {
  int start_x = x;
  int start_y = y;

  for (size_t i = 0; i < (width * height) / 8; i ++) {
    memcpy_P(&pixel_buff, sprite+i, 1);
    u8g2.drawXBM(x, y, 8, 1, &pixel_buff);

    x += 8;

    if (x == start_x + width) {
      x = start_x;
      y++;
    }
  }
}